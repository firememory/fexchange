// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef PROTOBUF_order_2eproto__INCLUDED
#define PROTOBUF_order_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace msg {
class Order;
class OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
}  // namespace msg

namespace msg {

namespace protobuf_order_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_order_2eproto

enum Order_TradeDirection {
  Order_TradeDirection_BID = 0,
  Order_TradeDirection_ASK = 1
};
bool Order_TradeDirection_IsValid(int value);
const Order_TradeDirection Order_TradeDirection_TradeDirection_MIN = Order_TradeDirection_BID;
const Order_TradeDirection Order_TradeDirection_TradeDirection_MAX = Order_TradeDirection_ASK;
const int Order_TradeDirection_TradeDirection_ARRAYSIZE = Order_TradeDirection_TradeDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_TradeDirection_descriptor();
inline const ::std::string& Order_TradeDirection_Name(Order_TradeDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_TradeDirection_descriptor(), value);
}
inline bool Order_TradeDirection_Parse(
    const ::std::string& name, Order_TradeDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_TradeDirection>(
    Order_TradeDirection_descriptor(), name, value);
}
enum Order_EntrustType {
  Order_EntrustType_MARKET = 0,
  Order_EntrustType_LIMIT = 1
};
bool Order_EntrustType_IsValid(int value);
const Order_EntrustType Order_EntrustType_EntrustType_MIN = Order_EntrustType_MARKET;
const Order_EntrustType Order_EntrustType_EntrustType_MAX = Order_EntrustType_LIMIT;
const int Order_EntrustType_EntrustType_ARRAYSIZE = Order_EntrustType_EntrustType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_EntrustType_descriptor();
inline const ::std::string& Order_EntrustType_Name(Order_EntrustType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_EntrustType_descriptor(), value);
}
inline bool Order_EntrustType_Parse(
    const ::std::string& name, Order_EntrustType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_EntrustType>(
    Order_EntrustType_descriptor(), name, value);
}
enum Order_DealAttribute {
  Order_DealAttribute_GFD = 0,
  Order_DealAttribute_FAK = 1,
  Order_DealAttribute_FOK = 2
};
bool Order_DealAttribute_IsValid(int value);
const Order_DealAttribute Order_DealAttribute_DealAttribute_MIN = Order_DealAttribute_GFD;
const Order_DealAttribute Order_DealAttribute_DealAttribute_MAX = Order_DealAttribute_FOK;
const int Order_DealAttribute_DealAttribute_ARRAYSIZE = Order_DealAttribute_DealAttribute_MAX + 1;

const ::google::protobuf::EnumDescriptor* Order_DealAttribute_descriptor();
inline const ::std::string& Order_DealAttribute_Name(Order_DealAttribute value) {
  return ::google::protobuf::internal::NameOfEnum(
    Order_DealAttribute_descriptor(), value);
}
inline bool Order_DealAttribute_Parse(
    const ::std::string& name, Order_DealAttribute* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Order_DealAttribute>(
    Order_DealAttribute_descriptor(), name, value);
}
// ===================================================================

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Order* other);

  // implements Message ----------------------------------------------

  inline Order* New() const PROTOBUF_FINAL { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Order_TradeDirection TradeDirection;
  static const TradeDirection BID =
    Order_TradeDirection_BID;
  static const TradeDirection ASK =
    Order_TradeDirection_ASK;
  static inline bool TradeDirection_IsValid(int value) {
    return Order_TradeDirection_IsValid(value);
  }
  static const TradeDirection TradeDirection_MIN =
    Order_TradeDirection_TradeDirection_MIN;
  static const TradeDirection TradeDirection_MAX =
    Order_TradeDirection_TradeDirection_MAX;
  static const int TradeDirection_ARRAYSIZE =
    Order_TradeDirection_TradeDirection_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TradeDirection_descriptor() {
    return Order_TradeDirection_descriptor();
  }
  static inline const ::std::string& TradeDirection_Name(TradeDirection value) {
    return Order_TradeDirection_Name(value);
  }
  static inline bool TradeDirection_Parse(const ::std::string& name,
      TradeDirection* value) {
    return Order_TradeDirection_Parse(name, value);
  }

  typedef Order_EntrustType EntrustType;
  static const EntrustType MARKET =
    Order_EntrustType_MARKET;
  static const EntrustType LIMIT =
    Order_EntrustType_LIMIT;
  static inline bool EntrustType_IsValid(int value) {
    return Order_EntrustType_IsValid(value);
  }
  static const EntrustType EntrustType_MIN =
    Order_EntrustType_EntrustType_MIN;
  static const EntrustType EntrustType_MAX =
    Order_EntrustType_EntrustType_MAX;
  static const int EntrustType_ARRAYSIZE =
    Order_EntrustType_EntrustType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EntrustType_descriptor() {
    return Order_EntrustType_descriptor();
  }
  static inline const ::std::string& EntrustType_Name(EntrustType value) {
    return Order_EntrustType_Name(value);
  }
  static inline bool EntrustType_Parse(const ::std::string& name,
      EntrustType* value) {
    return Order_EntrustType_Parse(name, value);
  }

  typedef Order_DealAttribute DealAttribute;
  static const DealAttribute GFD =
    Order_DealAttribute_GFD;
  static const DealAttribute FAK =
    Order_DealAttribute_FAK;
  static const DealAttribute FOK =
    Order_DealAttribute_FOK;
  static inline bool DealAttribute_IsValid(int value) {
    return Order_DealAttribute_IsValid(value);
  }
  static const DealAttribute DealAttribute_MIN =
    Order_DealAttribute_DealAttribute_MIN;
  static const DealAttribute DealAttribute_MAX =
    Order_DealAttribute_DealAttribute_MAX;
  static const int DealAttribute_ARRAYSIZE =
    Order_DealAttribute_DealAttribute_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DealAttribute_descriptor() {
    return Order_DealAttribute_descriptor();
  }
  static inline const ::std::string& DealAttribute_Name(DealAttribute value) {
    return Order_DealAttribute_Name(value);
  }
  static inline bool DealAttribute_Parse(const ::std::string& name,
      DealAttribute* value) {
    return Order_DealAttribute_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required string security = 2;
  bool has_security() const;
  void clear_security();
  static const int kSecurityFieldNumber = 2;
  const ::std::string& security() const;
  void set_security(const ::std::string& value);
  #if LANG_CXX11
  void set_security(::std::string&& value);
  #endif
  void set_security(const char* value);
  void set_security(const char* value, size_t size);
  ::std::string* mutable_security();
  ::std::string* release_security();
  void set_allocated_security(::std::string* security);

  // required string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required string broker = 4;
  bool has_broker() const;
  void clear_broker();
  static const int kBrokerFieldNumber = 4;
  const ::std::string& broker() const;
  void set_broker(const ::std::string& value);
  #if LANG_CXX11
  void set_broker(::std::string&& value);
  #endif
  void set_broker(const char* value);
  void set_broker(const char* value, size_t size);
  ::std::string* mutable_broker();
  ::std::string* release_broker();
  void set_allocated_broker(::std::string* broker);

  // required .google.protobuf.Timestamp time = 5;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  const ::google::protobuf::Timestamp& time() const;
  ::google::protobuf::Timestamp* mutable_time();
  ::google::protobuf::Timestamp* release_time();
  void set_allocated_time(::google::protobuf::Timestamp* time);

  // required .msg.Order.TradeDirection tradeDirection = 6;
  bool has_tradedirection() const;
  void clear_tradedirection();
  static const int kTradeDirectionFieldNumber = 6;
  ::msg::Order_TradeDirection tradedirection() const;
  void set_tradedirection(::msg::Order_TradeDirection value);

  // required .msg.Order.EntrustType entrustType = 7;
  bool has_entrusttype() const;
  void clear_entrusttype();
  static const int kEntrustTypeFieldNumber = 7;
  ::msg::Order_EntrustType entrusttype() const;
  void set_entrusttype(::msg::Order_EntrustType value);

  // required .msg.Order.DealAttribute dealAttr = 8;
  bool has_dealattr() const;
  void clear_dealattr();
  static const int kDealAttrFieldNumber = 8;
  ::msg::Order_DealAttribute dealattr() const;
  void set_dealattr(::msg::Order_DealAttribute value);

  // @@protoc_insertion_point(class_scope:msg.Order)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_security();
  void clear_has_security();
  void set_has_account();
  void clear_has_account();
  void set_has_broker();
  void clear_has_broker();
  void set_has_time();
  void clear_has_time();
  void set_has_tradedirection();
  void clear_has_tradedirection();
  void set_has_entrusttype();
  void clear_has_entrusttype();
  void set_has_dealattr();
  void clear_has_dealattr();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr security_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr broker_;
  ::google::protobuf::Timestamp* time_;
  int tradedirection_;
  int entrusttype_;
  int dealattr_;
  friend struct protobuf_order_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// required string id = 1;
inline bool Order::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Order::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Order::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Order::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Order::id() const {
  // @@protoc_insertion_point(field_get:msg.Order.id)
  return id_.GetNoArena();
}
inline void Order::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.id)
}
#if LANG_CXX11
inline void Order::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.id)
}
#endif
inline void Order::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.id)
}
inline void Order::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.id)
}
inline ::std::string* Order::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:msg.Order.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_id() {
  // @@protoc_insertion_point(field_release:msg.Order.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.id)
}

// required string security = 2;
inline bool Order::has_security() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Order::set_has_security() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Order::clear_has_security() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Order::clear_security() {
  security_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_security();
}
inline const ::std::string& Order::security() const {
  // @@protoc_insertion_point(field_get:msg.Order.security)
  return security_.GetNoArena();
}
inline void Order::set_security(const ::std::string& value) {
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.security)
}
#if LANG_CXX11
inline void Order::set_security(::std::string&& value) {
  set_has_security();
  security_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.security)
}
#endif
inline void Order::set_security(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.security)
}
inline void Order::set_security(const char* value, size_t size) {
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.security)
}
inline ::std::string* Order::mutable_security() {
  set_has_security();
  // @@protoc_insertion_point(field_mutable:msg.Order.security)
  return security_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_security() {
  // @@protoc_insertion_point(field_release:msg.Order.security)
  clear_has_security();
  return security_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_security(::std::string* security) {
  if (security != NULL) {
    set_has_security();
  } else {
    clear_has_security();
  }
  security_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.security)
}

// required string account = 3;
inline bool Order::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Order::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Order::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Order::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& Order::account() const {
  // @@protoc_insertion_point(field_get:msg.Order.account)
  return account_.GetNoArena();
}
inline void Order::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.account)
}
#if LANG_CXX11
inline void Order::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.account)
}
#endif
inline void Order::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.account)
}
inline void Order::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.account)
}
inline ::std::string* Order::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg.Order.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_account() {
  // @@protoc_insertion_point(field_release:msg.Order.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.account)
}

// required string broker = 4;
inline bool Order::has_broker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Order::set_has_broker() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Order::clear_has_broker() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Order::clear_broker() {
  broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_broker();
}
inline const ::std::string& Order::broker() const {
  // @@protoc_insertion_point(field_get:msg.Order.broker)
  return broker_.GetNoArena();
}
inline void Order::set_broker(const ::std::string& value) {
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.broker)
}
#if LANG_CXX11
inline void Order::set_broker(::std::string&& value) {
  set_has_broker();
  broker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.broker)
}
#endif
inline void Order::set_broker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.broker)
}
inline void Order::set_broker(const char* value, size_t size) {
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.broker)
}
inline ::std::string* Order::mutable_broker() {
  set_has_broker();
  // @@protoc_insertion_point(field_mutable:msg.Order.broker)
  return broker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_broker() {
  // @@protoc_insertion_point(field_release:msg.Order.broker)
  clear_has_broker();
  return broker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_broker(::std::string* broker) {
  if (broker != NULL) {
    set_has_broker();
  } else {
    clear_has_broker();
  }
  broker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.broker)
}

// required .google.protobuf.Timestamp time = 5;
inline bool Order::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Order::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Order::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Order::clear_time() {
  if (time_ != NULL) time_->::google::protobuf::Timestamp::Clear();
  clear_has_time();
}
inline const ::google::protobuf::Timestamp& Order::time() const {
  // @@protoc_insertion_point(field_get:msg.Order.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* Order::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:msg.Order.time)
  return time_;
}
inline ::google::protobuf::Timestamp* Order::release_time() {
  // @@protoc_insertion_point(field_release:msg.Order.time)
  clear_has_time();
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
inline void Order::set_allocated_time(::google::protobuf::Timestamp* time) {
  delete time_;
  if (time != NULL && time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time = new ::google::protobuf::Timestamp;
    new_time->CopyFrom(*time);
    time = new_time;
  }
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Order.time)
}

// required .msg.Order.TradeDirection tradeDirection = 6;
inline bool Order::has_tradedirection() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Order::set_has_tradedirection() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Order::clear_has_tradedirection() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Order::clear_tradedirection() {
  tradedirection_ = 0;
  clear_has_tradedirection();
}
inline ::msg::Order_TradeDirection Order::tradedirection() const {
  // @@protoc_insertion_point(field_get:msg.Order.tradeDirection)
  return static_cast< ::msg::Order_TradeDirection >(tradedirection_);
}
inline void Order::set_tradedirection(::msg::Order_TradeDirection value) {
  assert(::msg::Order_TradeDirection_IsValid(value));
  set_has_tradedirection();
  tradedirection_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.tradeDirection)
}

// required .msg.Order.EntrustType entrustType = 7;
inline bool Order::has_entrusttype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Order::set_has_entrusttype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Order::clear_has_entrusttype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Order::clear_entrusttype() {
  entrusttype_ = 0;
  clear_has_entrusttype();
}
inline ::msg::Order_EntrustType Order::entrusttype() const {
  // @@protoc_insertion_point(field_get:msg.Order.entrustType)
  return static_cast< ::msg::Order_EntrustType >(entrusttype_);
}
inline void Order::set_entrusttype(::msg::Order_EntrustType value) {
  assert(::msg::Order_EntrustType_IsValid(value));
  set_has_entrusttype();
  entrusttype_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.entrustType)
}

// required .msg.Order.DealAttribute dealAttr = 8;
inline bool Order::has_dealattr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Order::set_has_dealattr() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Order::clear_has_dealattr() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Order::clear_dealattr() {
  dealattr_ = 0;
  clear_has_dealattr();
}
inline ::msg::Order_DealAttribute Order::dealattr() const {
  // @@protoc_insertion_point(field_get:msg.Order.dealAttr)
  return static_cast< ::msg::Order_DealAttribute >(dealattr_);
}
inline void Order::set_dealattr(::msg::Order_DealAttribute value) {
  assert(::msg::Order_DealAttribute_IsValid(value));
  set_has_dealattr();
  dealattr_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.dealAttr)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace msg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::msg::Order_TradeDirection> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Order_TradeDirection>() {
  return ::msg::Order_TradeDirection_descriptor();
}
template <> struct is_proto_enum< ::msg::Order_EntrustType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Order_EntrustType>() {
  return ::msg::Order_EntrustType_descriptor();
}
template <> struct is_proto_enum< ::msg::Order_DealAttribute> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::msg::Order_DealAttribute>() {
  return ::msg::Order_DealAttribute_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_order_2eproto__INCLUDED
