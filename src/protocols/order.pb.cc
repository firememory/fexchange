// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "order.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msg {
class OrderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Order> {
} _Order_default_instance_;

namespace protobuf_order_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, broker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, tradedirection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, entrusttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, dealattr_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 13, sizeof(Order)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Order_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "order.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _Order_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  _Order_default_instance_.DefaultConstruct();
  _Order_default_instance_.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013order.proto\022\003msg\032\037google/protobuf/time"
      "stamp.proto\"\362\002\n\005Order\022\n\n\002id\030\001 \002(\t\022\020\n\010sec"
      "urity\030\002 \002(\t\022\017\n\007account\030\003 \002(\t\022\016\n\006broker\030\004"
      " \002(\t\022(\n\004time\030\005 \002(\0132\032.google.protobuf.Tim"
      "estamp\0221\n\016tradeDirection\030\006 \002(\0162\031.msg.Ord"
      "er.TradeDirection\022+\n\013entrustType\030\007 \002(\0162\026"
      ".msg.Order.EntrustType\022*\n\010dealAttr\030\010 \002(\016"
      "2\030.msg.Order.DealAttribute\"\"\n\016TradeDirec"
      "tion\022\007\n\003BID\020\000\022\007\n\003ASK\020\001\"$\n\013EntrustType\022\n\n"
      "\006MARKET\020\000\022\t\n\005LIMIT\020\001\"*\n\rDealAttribute\022\007\n"
      "\003GFD\020\000\022\007\n\003FAK\020\001\022\007\n\003FOK\020\002P\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 426);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "order.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_order_2eproto

const ::google::protobuf::EnumDescriptor* Order_TradeDirection_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[0];
}
bool Order_TradeDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Order_TradeDirection Order::BID;
const Order_TradeDirection Order::ASK;
const Order_TradeDirection Order::TradeDirection_MIN;
const Order_TradeDirection Order::TradeDirection_MAX;
const int Order::TradeDirection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Order_EntrustType_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[1];
}
bool Order_EntrustType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Order_EntrustType Order::MARKET;
const Order_EntrustType Order::LIMIT;
const Order_EntrustType Order::EntrustType_MIN;
const Order_EntrustType Order::EntrustType_MAX;
const int Order::EntrustType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Order_DealAttribute_descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_enum_descriptors[2];
}
bool Order_DealAttribute_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Order_DealAttribute Order::GFD;
const Order_DealAttribute Order::FAK;
const Order_DealAttribute Order::FOK;
const Order_DealAttribute Order::DealAttribute_MIN;
const Order_DealAttribute Order::DealAttribute_MAX;
const int Order::DealAttribute_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kIdFieldNumber;
const int Order::kSecurityFieldNumber;
const int Order::kAccountFieldNumber;
const int Order::kBrokerFieldNumber;
const int Order::kTimeFieldNumber;
const int Order::kTradeDirectionFieldNumber;
const int Order::kEntrustTypeFieldNumber;
const int Order::kDealAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_order_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  security_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_security()) {
    security_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_broker()) {
    broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_);
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  ::memcpy(&tradedirection_, &from.tradedirection_,
    reinterpret_cast<char*>(&dealattr_) -
    reinterpret_cast<char*>(&tradedirection_) + sizeof(dealattr_));
  // @@protoc_insertion_point(copy_constructor:msg.Order)
}

void Order::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, reinterpret_cast<char*>(&dealattr_) -
    reinterpret_cast<char*>(&time_) + sizeof(dealattr_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:msg.Order)
  SharedDtor();
}

void Order::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  broker_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete time_;
  }
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  protobuf_order_2eproto::InitDefaults();
  return *internal_default_instance();
}

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.Order)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_id()) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (has_security()) {
      GOOGLE_DCHECK(!security_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*security_.UnsafeRawStringPointer())->clear();
    }
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_broker()) {
      GOOGLE_DCHECK(!broker_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*broker_.UnsafeRawStringPointer())->clear();
    }
    if (has_time()) {
      GOOGLE_DCHECK(time_ != NULL);
      time_->::google::protobuf::Timestamp::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&tradedirection_, 0, reinterpret_cast<char*>(&dealattr_) -
      reinterpret_cast<char*>(&tradedirection_) + sizeof(dealattr_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Order.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string security = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->security().data(), this->security().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Order.security");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Order.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string broker = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_broker()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->broker().data(), this->broker().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msg.Order.broker");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .google.protobuf.Timestamp time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .msg.Order.TradeDirection tradeDirection = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg::Order_TradeDirection_IsValid(value)) {
            set_tradedirection(static_cast< ::msg::Order_TradeDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .msg.Order.EntrustType entrustType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg::Order_EntrustType_IsValid(value)) {
            set_entrusttype(static_cast< ::msg::Order_EntrustType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .msg.Order.DealAttribute dealAttr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg::Order_DealAttribute_IsValid(value)) {
            set_dealattr(static_cast< ::msg::Order_DealAttribute >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string security = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->security().data(), this->security().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.security");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->security(), output);
  }

  // required string account = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // required string broker = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broker().data(), this->broker().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.broker");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->broker(), output);
  }

  // required .google.protobuf.Timestamp time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->time_, output);
  }

  // required .msg.Order.TradeDirection tradeDirection = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->tradedirection(), output);
  }

  // required .msg.Order.EntrustType entrustType = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->entrusttype(), output);
  }

  // required .msg.Order.DealAttribute dealAttr = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->dealattr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string security = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->security().data(), this->security().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.security");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->security(), target);
  }

  // required string account = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // required string broker = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->broker().data(), this->broker().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msg.Order.broker");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->broker(), target);
  }

  // required .google.protobuf.Timestamp time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->time_, deterministic, target);
  }

  // required .msg.Order.TradeDirection tradeDirection = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->tradedirection(), target);
  }

  // required .msg.Order.EntrustType entrustType = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->entrusttype(), target);
  }

  // required .msg.Order.DealAttribute dealAttr = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->dealattr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.Order)
  return target;
}

size_t Order::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msg.Order)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_security()) {
    // required string security = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security());
  }

  if (has_account()) {
    // required string account = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  if (has_broker()) {
    // required string broker = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker());
  }

  if (has_time()) {
    // required .google.protobuf.Timestamp time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);
  }

  if (has_tradedirection()) {
    // required .msg.Order.TradeDirection tradeDirection = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tradedirection());
  }

  if (has_entrusttype()) {
    // required .msg.Order.EntrustType entrustType = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entrusttype());
  }

  if (has_dealattr()) {
    // required .msg.Order.DealAttribute dealAttr = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dealattr());
  }

  return total_size;
}
size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.Order)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string security = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->security());

    // required string account = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());

    // required string broker = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->broker());

    // required .google.protobuf.Timestamp time = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->time_);

    // required .msg.Order.TradeDirection tradeDirection = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tradedirection());

    // required .msg.Order.EntrustType entrustType = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entrusttype());

    // required .msg.Order.DealAttribute dealAttr = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->dealattr());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_security();
      security_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.security_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_broker();
      broker_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.broker_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
    }
    if (cached_has_bits & 0x00000020u) {
      tradedirection_ = from.tradedirection_;
    }
    if (cached_has_bits & 0x00000040u) {
      entrusttype_ = from.entrusttype_;
    }
    if (cached_has_bits & 0x00000080u) {
      dealattr_ = from.dealattr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  id_.Swap(&other->id_);
  security_.Swap(&other->security_);
  account_.Swap(&other->account_);
  broker_.Swap(&other->broker_);
  std::swap(time_, other->time_);
  std::swap(tradedirection_, other->tradedirection_);
  std::swap(entrusttype_, other->entrusttype_);
  std::swap(dealattr_, other->dealattr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_order_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_order_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// required string id = 1;
bool Order::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Order::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Order::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Order::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& Order::id() const {
  // @@protoc_insertion_point(field_get:msg.Order.id)
  return id_.GetNoArena();
}
void Order::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.id)
}
#if LANG_CXX11
void Order::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.id)
}
#endif
void Order::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.id)
}
void Order::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.id)
}
::std::string* Order::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:msg.Order.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_id() {
  // @@protoc_insertion_point(field_release:msg.Order.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.id)
}

// required string security = 2;
bool Order::has_security() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Order::set_has_security() {
  _has_bits_[0] |= 0x00000002u;
}
void Order::clear_has_security() {
  _has_bits_[0] &= ~0x00000002u;
}
void Order::clear_security() {
  security_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_security();
}
const ::std::string& Order::security() const {
  // @@protoc_insertion_point(field_get:msg.Order.security)
  return security_.GetNoArena();
}
void Order::set_security(const ::std::string& value) {
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.security)
}
#if LANG_CXX11
void Order::set_security(::std::string&& value) {
  set_has_security();
  security_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.security)
}
#endif
void Order::set_security(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.security)
}
void Order::set_security(const char* value, size_t size) {
  set_has_security();
  security_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.security)
}
::std::string* Order::mutable_security() {
  set_has_security();
  // @@protoc_insertion_point(field_mutable:msg.Order.security)
  return security_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_security() {
  // @@protoc_insertion_point(field_release:msg.Order.security)
  clear_has_security();
  return security_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_security(::std::string* security) {
  if (security != NULL) {
    set_has_security();
  } else {
    clear_has_security();
  }
  security_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), security);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.security)
}

// required string account = 3;
bool Order::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Order::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
void Order::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
void Order::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& Order::account() const {
  // @@protoc_insertion_point(field_get:msg.Order.account)
  return account_.GetNoArena();
}
void Order::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.account)
}
#if LANG_CXX11
void Order::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.account)
}
#endif
void Order::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.account)
}
void Order::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.account)
}
::std::string* Order::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:msg.Order.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_account() {
  // @@protoc_insertion_point(field_release:msg.Order.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.account)
}

// required string broker = 4;
bool Order::has_broker() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Order::set_has_broker() {
  _has_bits_[0] |= 0x00000008u;
}
void Order::clear_has_broker() {
  _has_bits_[0] &= ~0x00000008u;
}
void Order::clear_broker() {
  broker_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_broker();
}
const ::std::string& Order::broker() const {
  // @@protoc_insertion_point(field_get:msg.Order.broker)
  return broker_.GetNoArena();
}
void Order::set_broker(const ::std::string& value) {
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.Order.broker)
}
#if LANG_CXX11
void Order::set_broker(::std::string&& value) {
  set_has_broker();
  broker_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.Order.broker)
}
#endif
void Order::set_broker(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.Order.broker)
}
void Order::set_broker(const char* value, size_t size) {
  set_has_broker();
  broker_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.Order.broker)
}
::std::string* Order::mutable_broker() {
  set_has_broker();
  // @@protoc_insertion_point(field_mutable:msg.Order.broker)
  return broker_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_broker() {
  // @@protoc_insertion_point(field_release:msg.Order.broker)
  clear_has_broker();
  return broker_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_broker(::std::string* broker) {
  if (broker != NULL) {
    set_has_broker();
  } else {
    clear_has_broker();
  }
  broker_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), broker);
  // @@protoc_insertion_point(field_set_allocated:msg.Order.broker)
}

// required .google.protobuf.Timestamp time = 5;
bool Order::has_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Order::set_has_time() {
  _has_bits_[0] |= 0x00000010u;
}
void Order::clear_has_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void Order::clear_time() {
  if (time_ != NULL) time_->::google::protobuf::Timestamp::Clear();
  clear_has_time();
}
const ::google::protobuf::Timestamp& Order::time() const {
  // @@protoc_insertion_point(field_get:msg.Order.time)
  return time_ != NULL ? *time_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* Order::mutable_time() {
  set_has_time();
  if (time_ == NULL) {
    time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:msg.Order.time)
  return time_;
}
::google::protobuf::Timestamp* Order::release_time() {
  // @@protoc_insertion_point(field_release:msg.Order.time)
  clear_has_time();
  ::google::protobuf::Timestamp* temp = time_;
  time_ = NULL;
  return temp;
}
void Order::set_allocated_time(::google::protobuf::Timestamp* time) {
  delete time_;
  if (time != NULL && time->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_time = new ::google::protobuf::Timestamp;
    new_time->CopyFrom(*time);
    time = new_time;
  }
  time_ = time;
  if (time) {
    set_has_time();
  } else {
    clear_has_time();
  }
  // @@protoc_insertion_point(field_set_allocated:msg.Order.time)
}

// required .msg.Order.TradeDirection tradeDirection = 6;
bool Order::has_tradedirection() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Order::set_has_tradedirection() {
  _has_bits_[0] |= 0x00000020u;
}
void Order::clear_has_tradedirection() {
  _has_bits_[0] &= ~0x00000020u;
}
void Order::clear_tradedirection() {
  tradedirection_ = 0;
  clear_has_tradedirection();
}
::msg::Order_TradeDirection Order::tradedirection() const {
  // @@protoc_insertion_point(field_get:msg.Order.tradeDirection)
  return static_cast< ::msg::Order_TradeDirection >(tradedirection_);
}
void Order::set_tradedirection(::msg::Order_TradeDirection value) {
  assert(::msg::Order_TradeDirection_IsValid(value));
  set_has_tradedirection();
  tradedirection_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.tradeDirection)
}

// required .msg.Order.EntrustType entrustType = 7;
bool Order::has_entrusttype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Order::set_has_entrusttype() {
  _has_bits_[0] |= 0x00000040u;
}
void Order::clear_has_entrusttype() {
  _has_bits_[0] &= ~0x00000040u;
}
void Order::clear_entrusttype() {
  entrusttype_ = 0;
  clear_has_entrusttype();
}
::msg::Order_EntrustType Order::entrusttype() const {
  // @@protoc_insertion_point(field_get:msg.Order.entrustType)
  return static_cast< ::msg::Order_EntrustType >(entrusttype_);
}
void Order::set_entrusttype(::msg::Order_EntrustType value) {
  assert(::msg::Order_EntrustType_IsValid(value));
  set_has_entrusttype();
  entrusttype_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.entrustType)
}

// required .msg.Order.DealAttribute dealAttr = 8;
bool Order::has_dealattr() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Order::set_has_dealattr() {
  _has_bits_[0] |= 0x00000080u;
}
void Order::clear_has_dealattr() {
  _has_bits_[0] &= ~0x00000080u;
}
void Order::clear_dealattr() {
  dealattr_ = 0;
  clear_has_dealattr();
}
::msg::Order_DealAttribute Order::dealattr() const {
  // @@protoc_insertion_point(field_get:msg.Order.dealAttr)
  return static_cast< ::msg::Order_DealAttribute >(dealattr_);
}
void Order::set_dealattr(::msg::Order_DealAttribute value) {
  assert(::msg::Order_DealAttribute_IsValid(value));
  set_has_dealattr();
  dealattr_ = value;
  // @@protoc_insertion_point(field_set:msg.Order.dealAttr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)
